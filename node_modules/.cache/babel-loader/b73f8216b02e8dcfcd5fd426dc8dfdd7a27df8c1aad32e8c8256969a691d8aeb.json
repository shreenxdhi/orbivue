{"ast":null,"code":"import React,{useState,useEffect}from'react';import{MapContainer,TileLayer,Marker,Popup}from'react-leaflet';import'leaflet/dist/leaflet.css';import L from'leaflet';import{getSatellitePositions}from'../services/satelliteService';// Fix for Leaflet marker icons in React\n// @ts-ignore\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";delete L.Icon.Default.prototype._getIconUrl;L.Icon.Default.mergeOptions({iconRetinaUrl:'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',iconUrl:'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',shadowUrl:'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png'});const SatelliteTracker=()=>{const[userLocation,setUserLocation]=useState([0,0]);const[satellites,setSatellites]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[selectedSatellite,setSelectedSatellite]=useState(null);const[filterVisible,setFilterVisible]=useState(false);// Get user's location\nuseEffect(()=>{if(navigator.geolocation){navigator.geolocation.getCurrentPosition(position=>{setUserLocation([position.coords.latitude,position.coords.longitude]);},()=>{setError('Unable to retrieve your location');// Default to New York City\nsetUserLocation([40.7128,-74.0060]);});}else{setError('Geolocation is not supported by your browser');// Default to New York City\nsetUserLocation([40.7128,-74.0060]);}},[]);// Fetch satellites when user location is available\nuseEffect(()=>{if(userLocation[0]!==0||userLocation[1]!==0){fetchSatellites();}},[userLocation]);const fetchSatellites=async()=>{try{setLoading(true);// This is where you'd call your actual API service\n// For now, we'll use a mock function\nconst data=await getSatellitePositions(userLocation[0],userLocation[1]);setSatellites(data);setLoading(false);}catch(err){setError('Error fetching satellite data');setLoading(false);}};const handleSatelliteClick=satellite=>{setSelectedSatellite(satellite);};const filteredSatellites=filterVisible?satellites.filter(sat=>sat.visible):satellites;return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col space-y-6\",children:[/*#__PURE__*/_jsxs(\"section\",{className:\"bg-white dark:bg-gray-800 rounded-lg shadow-md p-6\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold text-gray-900 dark:text-white mb-4\",children:\"Satellite Tracker\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-4 mb-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setFilterVisible(!filterVisible),className:`px-4 py-2 rounded-lg font-medium ${filterVisible?'bg-primary-500 text-white':'bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-white'}`,children:filterVisible?'Showing Visible Only':'Show All Satellites'}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchSatellites,className:\"px-4 py-2 bg-primary-600 hover:bg-primary-700 text-white font-medium rounded-lg\",children:\"Refresh Data\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-100 dark:bg-red-900 text-red-700 dark:text-red-300 p-3 rounded-lg mb-4\",children:error}),loading?/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center h-96\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-500\"})}):/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col md:flex-row gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"md:w-1/3 h-[500px] overflow-y-auto pr-2\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-3 text-gray-800 dark:text-white\",children:\"Satellites\"}),filteredSatellites.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500 dark:text-gray-400\",children:\"No satellites found for your location\"}):/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:filteredSatellites.map(satellite=>/*#__PURE__*/_jsxs(\"div\",{onClick:()=>handleSatelliteClick(satellite),className:`p-3 rounded-lg cursor-pointer transition-colors ${(selectedSatellite===null||selectedSatellite===void 0?void 0:selectedSatellite.id)===satellite.id?'bg-primary-100 dark:bg-primary-900':'bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600'}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium text-gray-900 dark:text-white\",children:satellite.name}),satellite.visible&&/*#__PURE__*/_jsx(\"span\",{className:\"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300 text-xs font-medium px-2 py-1 rounded-full\",children:\"Visible\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-500 dark:text-gray-400 mt-1\",children:[\"NORAD ID: \",satellite.noradId]})]},satellite.id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"md:w-2/3 h-[500px] bg-gray-100 dark:bg-gray-700 rounded-lg overflow-hidden\",children:/*#__PURE__*/_jsxs(MapContainer,{center:userLocation,zoom:3,style:{height:'100%',width:'100%'},attributionControl:false,children:[/*#__PURE__*/_jsx(TileLayer,{url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",attribution:\"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"}),/*#__PURE__*/_jsx(Marker,{position:userLocation,children:/*#__PURE__*/_jsx(Popup,{children:\"Your Location\"})}),filteredSatellites.map(satellite=>/*#__PURE__*/_jsx(Marker,{position:[satellite.latitude,satellite.longitude],icon:new L.Icon({iconUrl:satellite.visible?'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png':'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png',shadowUrl:'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',iconSize:[25,41],iconAnchor:[12,41],popupAnchor:[1,-34],shadowSize:[41,41]}),children:/*#__PURE__*/_jsx(Popup,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-bold\",children:satellite.name}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Altitude: \",satellite.altitude.toFixed(2),\" km\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Velocity: \",satellite.velocity.toFixed(2),\" km/s\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Visibility: \",satellite.visible?'Visible':'Not visible']})]})})},satellite.id))]})})]})]}),selectedSatellite&&/*#__PURE__*/_jsxs(\"section\",{className:\"bg-white dark:bg-gray-800 rounded-lg shadow-md p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-start\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold text-gray-900 dark:text-white mb-4\",children:selectedSatellite.name}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedSatellite(null),className:\"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\",children:/*#__PURE__*/_jsx(\"svg\",{className:\"h-5 w-5\",fill:\"none\",viewBox:\"0 0 24 24\",stroke:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M6 18L18 6M6 6l12 12\"})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-sm font-medium text-gray-500 dark:text-gray-400\",children:\"NORAD ID\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-lg text-gray-900 dark:text-white\",children:selectedSatellite.noradId})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-sm font-medium text-gray-500 dark:text-gray-400\",children:\"Current Position\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-lg text-gray-900 dark:text-white\",children:[selectedSatellite.latitude.toFixed(4),\"\\xB0, \",selectedSatellite.longitude.toFixed(4),\"\\xB0\"]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-sm font-medium text-gray-500 dark:text-gray-400\",children:\"Altitude\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-lg text-gray-900 dark:text-white\",children:[selectedSatellite.altitude.toFixed(2),\" km\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-sm font-medium text-gray-500 dark:text-gray-400\",children:\"Velocity\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-lg text-gray-900 dark:text-white\",children:[selectedSatellite.velocity.toFixed(2),\" km/s\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-sm font-medium text-gray-500 dark:text-gray-400\",children:\"Visibility\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-lg text-gray-900 dark:text-white\",children:selectedSatellite.visible?'Currently visible from your location':'Not currently visible'})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"mt-2 px-4 py-2 bg-primary-600 hover:bg-primary-700 text-white font-medium rounded-lg\",children:\"Add to Watch List\"})})]})]})]})]});};export default SatelliteTracker;","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","L","getSatellitePositions","jsx","_jsx","jsxs","_jsxs","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","SatelliteTracker","userLocation","setUserLocation","satellites","setSatellites","loading","setLoading","error","setError","selectedSatellite","setSelectedSatellite","filterVisible","setFilterVisible","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetchSatellites","data","err","handleSatelliteClick","satellite","filteredSatellites","filter","sat","visible","className","children","onClick","length","map","id","name","noradId","center","zoom","style","height","width","attributionControl","url","attribution","icon","iconSize","iconAnchor","popupAnchor","shadowSize","altitude","toFixed","velocity","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d"],"sources":["/Users/shreenidhivasishta/sat/orbivue/src/pages/SatelliteTracker.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport { getSatellitePositions } from '../services/satelliteService';\n\n// Fix for Leaflet marker icons in React\n// @ts-ignore\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png',\n});\n\ninterface Satellite {\n  id: number;\n  name: string;\n  latitude: number;\n  longitude: number;\n  altitude: number;\n  velocity: number;\n  visible: boolean;\n  noradId: string;\n}\n\nconst SatelliteTracker: React.FC = () => {\n  const [userLocation, setUserLocation] = useState<[number, number]>([0, 0]);\n  const [satellites, setSatellites] = useState<Satellite[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedSatellite, setSelectedSatellite] = useState<Satellite | null>(null);\n  const [filterVisible, setFilterVisible] = useState<boolean>(false);\n\n  // Get user's location\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          setUserLocation([position.coords.latitude, position.coords.longitude]);\n        },\n        () => {\n          setError('Unable to retrieve your location');\n          // Default to New York City\n          setUserLocation([40.7128, -74.0060]);\n        }\n      );\n    } else {\n      setError('Geolocation is not supported by your browser');\n      // Default to New York City\n      setUserLocation([40.7128, -74.0060]);\n    }\n  }, []);\n\n  // Fetch satellites when user location is available\n  useEffect(() => {\n    if (userLocation[0] !== 0 || userLocation[1] !== 0) {\n      fetchSatellites();\n    }\n  }, [userLocation]);\n\n  const fetchSatellites = async () => {\n    try {\n      setLoading(true);\n      // This is where you'd call your actual API service\n      // For now, we'll use a mock function\n      const data = await getSatellitePositions(userLocation[0], userLocation[1]);\n      setSatellites(data);\n      setLoading(false);\n    } catch (err) {\n      setError('Error fetching satellite data');\n      setLoading(false);\n    }\n  };\n\n  const handleSatelliteClick = (satellite: Satellite) => {\n    setSelectedSatellite(satellite);\n  };\n\n  const filteredSatellites = filterVisible\n    ? satellites.filter((sat) => sat.visible)\n    : satellites;\n\n  return (\n    <div className=\"flex flex-col space-y-6\">\n      <section className=\"bg-white dark:bg-gray-800 rounded-lg shadow-md p-6\">\n        <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\">\n          Satellite Tracker\n        </h1>\n        <div className=\"flex flex-wrap gap-4 mb-4\">\n          <button\n            onClick={() => setFilterVisible(!filterVisible)}\n            className={`px-4 py-2 rounded-lg font-medium ${\n              filterVisible\n                ? 'bg-primary-500 text-white'\n                : 'bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-white'\n            }`}\n          >\n            {filterVisible ? 'Showing Visible Only' : 'Show All Satellites'}\n          </button>\n          <button\n            onClick={fetchSatellites}\n            className=\"px-4 py-2 bg-primary-600 hover:bg-primary-700 text-white font-medium rounded-lg\"\n          >\n            Refresh Data\n          </button>\n        </div>\n\n        {error && <div className=\"bg-red-100 dark:bg-red-900 text-red-700 dark:text-red-300 p-3 rounded-lg mb-4\">{error}</div>}\n\n        {loading ? (\n          <div className=\"flex justify-center items-center h-96\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-500\"></div>\n          </div>\n        ) : (\n          <div className=\"flex flex-col md:flex-row gap-6\">\n            <div className=\"md:w-1/3 h-[500px] overflow-y-auto pr-2\">\n              <h2 className=\"text-xl font-semibold mb-3 text-gray-800 dark:text-white\">Satellites</h2>\n              {filteredSatellites.length === 0 ? (\n                <p className=\"text-gray-500 dark:text-gray-400\">No satellites found for your location</p>\n              ) : (\n                <div className=\"space-y-2\">\n                  {filteredSatellites.map((satellite) => (\n                    <div\n                      key={satellite.id}\n                      onClick={() => handleSatelliteClick(satellite)}\n                      className={`p-3 rounded-lg cursor-pointer transition-colors ${\n                        selectedSatellite?.id === satellite.id\n                          ? 'bg-primary-100 dark:bg-primary-900'\n                          : 'bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600'\n                      }`}\n                    >\n                      <div className=\"flex justify-between items-center\">\n                        <h3 className=\"font-medium text-gray-900 dark:text-white\">{satellite.name}</h3>\n                        {satellite.visible && (\n                          <span className=\"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300 text-xs font-medium px-2 py-1 rounded-full\">\n                            Visible\n                          </span>\n                        )}\n                      </div>\n                      <div className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\n                        NORAD ID: {satellite.noradId}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            <div className=\"md:w-2/3 h-[500px] bg-gray-100 dark:bg-gray-700 rounded-lg overflow-hidden\">\n              <MapContainer\n                center={userLocation}\n                zoom={3}\n                style={{ height: '100%', width: '100%' }}\n                attributionControl={false}\n              >\n                <TileLayer\n                  url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                  attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                />\n                <Marker position={userLocation}>\n                  <Popup>Your Location</Popup>\n                </Marker>\n                {filteredSatellites.map((satellite) => (\n                  <Marker\n                    key={satellite.id}\n                    position={[satellite.latitude, satellite.longitude]}\n                    icon={new L.Icon({\n                      iconUrl: satellite.visible\n                        ? 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png'\n                        : 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png',\n                      shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n                      iconSize: [25, 41],\n                      iconAnchor: [12, 41],\n                      popupAnchor: [1, -34],\n                      shadowSize: [41, 41],\n                    })}\n                  >\n                    <Popup>\n                      <div>\n                        <h3 className=\"font-bold\">{satellite.name}</h3>\n                        <p>Altitude: {satellite.altitude.toFixed(2)} km</p>\n                        <p>Velocity: {satellite.velocity.toFixed(2)} km/s</p>\n                        <p>Visibility: {satellite.visible ? 'Visible' : 'Not visible'}</p>\n                      </div>\n                    </Popup>\n                  </Marker>\n                ))}\n              </MapContainer>\n            </div>\n          </div>\n        )}\n      </section>\n\n      {selectedSatellite && (\n        <section className=\"bg-white dark:bg-gray-800 rounded-lg shadow-md p-6\">\n          <div className=\"flex justify-between items-start\">\n            <h2 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4\">\n              {selectedSatellite.name}\n            </h2>\n            <button\n              onClick={() => setSelectedSatellite(null)}\n              className=\"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\n            >\n              <svg className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <div className=\"mb-4\">\n                <h3 className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">NORAD ID</h3>\n                <p className=\"text-lg text-gray-900 dark:text-white\">{selectedSatellite.noradId}</p>\n              </div>\n              <div className=\"mb-4\">\n                <h3 className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Current Position</h3>\n                <p className=\"text-lg text-gray-900 dark:text-white\">\n                  {selectedSatellite.latitude.toFixed(4)}°, {selectedSatellite.longitude.toFixed(4)}°\n                </p>\n              </div>\n              <div>\n                <h3 className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Altitude</h3>\n                <p className=\"text-lg text-gray-900 dark:text-white\">{selectedSatellite.altitude.toFixed(2)} km</p>\n              </div>\n            </div>\n            \n            <div>\n              <div className=\"mb-4\">\n                <h3 className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Velocity</h3>\n                <p className=\"text-lg text-gray-900 dark:text-white\">{selectedSatellite.velocity.toFixed(2)} km/s</p>\n              </div>\n              <div className=\"mb-4\">\n                <h3 className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Visibility</h3>\n                <p className=\"text-lg text-gray-900 dark:text-white\">\n                  {selectedSatellite.visible ? 'Currently visible from your location' : 'Not currently visible'}\n                </p>\n              </div>\n              <div>\n                <button\n                  className=\"mt-2 px-4 py-2 bg-primary-600 hover:bg-primary-700 text-white font-medium rounded-lg\"\n                >\n                  Add to Watch List\n                </button>\n              </div>\n            </div>\n          </div>\n        </section>\n      )}\n    </div>\n  );\n};\n\nexport default SatelliteTracker; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}