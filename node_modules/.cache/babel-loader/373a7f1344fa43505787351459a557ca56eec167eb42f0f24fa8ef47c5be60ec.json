{"ast":null,"code":"var _jsxFileName = \"/Users/shreenidhivasishta/sat/orbivue/src/pages/RadioData.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { fetchRadioData } from '../services/radioService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RadioData = () => {\n  _s();\n  var _satellites$find;\n  const [satellites, setSatellites] = useState([]);\n  const [selectedSatellite, setSelectedSatellite] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [spectrumMode, setSpectrumMode] = useState('waterfall');\n  const [frequencies, setFrequencies] = useState([]);\n  const [isRecording, setIsRecording] = useState(false);\n  const canvasRef = useRef(null);\n  const spectrogramInterval = useRef(null);\n\n  // Fetch initial satellite radio data\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchRadioData();\n        setSatellites(data);\n\n        // Set first satellite as selected by default\n        if (data.length > 0 && !selectedSatellite) {\n          setSelectedSatellite(data[0].id);\n          setFrequencies(data[0].frequencies);\n        }\n        setLoading(false);\n      } catch (err) {\n        setError('Error loading radio data. Please try again.');\n        setLoading(false);\n      }\n    };\n    loadData();\n  }, []);\n\n  // Handle satellite selection change\n  const handleSelectSatellite = satelliteId => {\n    const satellite = satellites.find(sat => sat.id === satelliteId);\n    if (satellite) {\n      setSelectedSatellite(satelliteId);\n      setFrequencies(satellite.frequencies);\n\n      // Reset the waterfall display\n      if (canvasRef.current) {\n        const ctx = canvasRef.current.getContext('2d');\n        if (ctx) {\n          ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n        }\n      }\n    }\n  };\n\n  // Draw the spectrum visualization (waterfall or line graph)\n  useEffect(() => {\n    if (!canvasRef.current || !selectedSatellite) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Clear any existing timer\n    if (spectrogramInterval.current) {\n      clearInterval(spectrogramInterval.current);\n    }\n\n    // For the waterfall display\n    let yPos = 0;\n    const drawWaterfall = () => {\n      if (!ctx || !canvas) return;\n\n      // Shift existing content down\n      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      ctx.putImageData(imageData, 0, 1);\n\n      // Draw new line at the top\n      for (let x = 0; x < canvas.width; x++) {\n        // Each x position corresponds to a frequency in our range\n        const normalized = x / canvas.width;\n\n        // Generate a \"signal\" value between 0-1\n        // In a real app, this would be actual signal data\n        let signalStrength = 0;\n\n        // Find peaks around certain frequencies based on our data\n        frequencies.forEach(freq => {\n          // Convert frequency to a position on our x-axis\n          const freqPos = (freq.frequency - 137.0) / 10; // Example range: 137-147 MHz\n\n          // Add a peak for each frequency with some noise\n          const distance = Math.abs(normalized - freqPos);\n          if (distance < 0.05) {\n            const peak = 1 - distance * 20;\n            signalStrength = Math.max(signalStrength, peak);\n          }\n        });\n\n        // Add some noise\n        signalStrength += Math.random() * 0.1;\n        signalStrength = Math.min(1, signalStrength);\n\n        // Map signal strength to a color (blue-green-yellow-red)\n        let color;\n        if (signalStrength < 0.25) {\n          color = `rgb(0, 0, ${Math.round(255 * signalStrength * 4)})`;\n        } else if (signalStrength < 0.5) {\n          color = `rgb(0, ${Math.round(255 * (signalStrength - 0.25) * 4)}, 255)`;\n        } else if (signalStrength < 0.75) {\n          color = `rgb(${Math.round(255 * (signalStrength - 0.5) * 4)}, 255, ${Math.round(255 - 255 * (signalStrength - 0.5) * 4)})`;\n        } else {\n          color = `rgb(255, ${Math.round(255 - 255 * (signalStrength - 0.75) * 4)}, 0)`;\n        }\n        ctx.fillStyle = color;\n        ctx.fillRect(x, 0, 1, 1);\n      }\n    };\n\n    // For the line graph display\n    const drawLineGraph = () => {\n      if (!ctx || !canvas) return;\n\n      // Clear canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Draw x and y axes\n      ctx.strokeStyle = '#666';\n      ctx.lineWidth = 1;\n      ctx.beginPath();\n      ctx.moveTo(0, canvas.height - 30);\n      ctx.lineTo(canvas.width, canvas.height - 30);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(0, canvas.height - 30);\n      ctx.stroke();\n\n      // Draw frequency labels\n      ctx.fillStyle = '#666';\n      ctx.font = '10px Arial';\n      for (let i = 0; i <= 10; i++) {\n        const x = i * canvas.width / 10;\n        const freq = 137 + i;\n        ctx.fillText(`${freq} MHz`, x, canvas.height - 15);\n      }\n\n      // Draw the spectrum line\n      ctx.strokeStyle = '#00a8ff';\n      ctx.lineWidth = 2;\n      ctx.beginPath();\n      for (let x = 0; x < canvas.width; x++) {\n        const normalized = x / canvas.width;\n        let signalStrength = 0;\n\n        // Similar logic as waterfall but for a line graph\n        frequencies.forEach(freq => {\n          const freqPos = (freq.frequency - 137.0) / 10;\n          const distance = Math.abs(normalized - freqPos);\n          if (distance < 0.05) {\n            const peak = 1 - distance * 20;\n            signalStrength = Math.max(signalStrength, peak);\n          }\n        });\n\n        // Add noise for realism\n        signalStrength += Math.random() * 0.1;\n        signalStrength = Math.min(1, signalStrength);\n\n        // Map to y position (inverted, so stronger signals go up)\n        const y = canvas.height - 30 - signalStrength * (canvas.height - 40);\n        if (x === 0) {\n          ctx.moveTo(x, y);\n        } else {\n          ctx.lineTo(x, y);\n        }\n      }\n      ctx.stroke();\n    };\n\n    // Start the visualization\n    if (spectrumMode === 'waterfall') {\n      // Draw initial waterfall\n      ctx.fillStyle = 'black';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Set up the interval to update the waterfall\n      spectrogramInterval.current = setInterval(drawWaterfall, 100);\n    } else {\n      // Draw the line graph and update it periodically\n      spectrogramInterval.current = setInterval(drawLineGraph, 100);\n    }\n\n    // Clean up on unmount\n    return () => {\n      if (spectrogramInterval.current) {\n        clearInterval(spectrogramInterval.current);\n      }\n    };\n  }, [selectedSatellite, spectrumMode, frequencies]);\n\n  // Toggle recording state\n  const toggleRecording = () => {\n    setIsRecording(!isRecording);\n    // In a real app, this would start/stop recording the signal data\n  };\n\n  // Format frequency label\n  const formatFrequency = freq => {\n    return `${freq.toFixed(3)} MHz`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col space-y-6\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"bg-white dark:bg-gray-800 rounded-lg shadow-md p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold text-gray-900 dark:text-white mb-4\",\n        children: \"Satellite Radio Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 dark:text-gray-300 mb-6\",\n        children: \"View and analyze radio signals from satellites as they pass overhead.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-100 dark:bg-red-900 text-red-700 dark:text-red-300 p-3 rounded-lg mb-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 19\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center h-64\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col md:flex-row gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"md:w-1/4 space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold text-gray-900 dark:text-white\",\n            children: \"Satellites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: satellites.map(satellite => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `p-3 rounded-lg cursor-pointer transition-colors ${selectedSatellite === satellite.id ? 'bg-primary-100 dark:bg-primary-900 border border-primary-500' : 'bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600'}`,\n              onClick: () => handleSelectSatellite(satellite.id),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium text-gray-900 dark:text-white\",\n                children: satellite.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-500 dark:text-gray-400\",\n                children: [satellite.frequencies.length, \" tracked \", satellite.frequencies.length === 1 ? 'frequency' : 'frequencies']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 21\n              }, this), satellite.isActive && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-1 flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"h-2 w-2 rounded-full bg-green-500 mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs text-green-600 dark:text-green-400\",\n                  children: \"Transmitting\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 23\n              }, this)]\n            }, satellite.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"md:w-3/4 space-y-4\",\n          children: selectedSatellite ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-xl font-semibold text-gray-900 dark:text-white\",\n                children: [(_satellites$find = satellites.find(s => s.id === selectedSatellite)) === null || _satellites$find === void 0 ? void 0 : _satellites$find.name, \" Radio Signals\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex rounded-lg overflow-hidden\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => setSpectrumMode('waterfall'),\n                    className: `px-3 py-1 text-sm ${spectrumMode === 'waterfall' ? 'bg-primary-600 text-white' : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300'}`,\n                    children: \"Waterfall\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => setSpectrumMode('line'),\n                    className: `px-3 py-1 text-sm ${spectrumMode === 'line' ? 'bg-primary-600 text-white' : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300'}`,\n                    children: \"Spectrum\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: toggleRecording,\n                  className: `flex items-center space-x-1 px-3 py-1 rounded-lg text-sm font-medium ${isRecording ? 'bg-red-600 text-white' : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300'}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `h-2 w-2 rounded-full ${isRecording ? 'bg-white animate-pulse' : 'bg-red-600'}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: isRecording ? 'Recording...' : 'Record'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative bg-black rounded-lg overflow-hidden\",\n              style: {\n                height: '300px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                ref: canvasRef,\n                width: 800,\n                height: 300,\n                className: \"w-full h-full\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-lg font-medium text-gray-900 dark:text-white mb-3\",\n                children: \"Tracked Frequencies\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"overflow-x-auto\",\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"min-w-full bg-white dark:bg-gray-800 rounded-lg overflow-hidden\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    className: \"bg-gray-100 dark:bg-gray-900\",\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        className: \"py-2 px-4 text-left text-sm font-medium text-gray-700 dark:text-gray-300\",\n                        children: \"Frequency\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 329,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        className: \"py-2 px-4 text-left text-sm font-medium text-gray-700 dark:text-gray-300\",\n                        children: \"Modulation\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 330,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        className: \"py-2 px-4 text-left text-sm font-medium text-gray-700 dark:text-gray-300\",\n                        children: \"Signal Type\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 331,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        className: \"py-2 px-4 text-left text-sm font-medium text-gray-700 dark:text-gray-300\",\n                        children: \"Status\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 332,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 328,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    className: \"divide-y divide-gray-200 dark:divide-gray-700\",\n                    children: frequencies.map((freq, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                      className: \"hover:bg-gray-50 dark:hover:bg-gray-900\",\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"py-2 px-4 text-sm text-gray-900 dark:text-white\",\n                        children: formatFrequency(freq.frequency)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 338,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"py-2 px-4 text-sm text-gray-900 dark:text-white\",\n                        children: freq.modulation\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 339,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"py-2 px-4 text-sm text-gray-900 dark:text-white\",\n                        children: freq.type\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 340,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"py-2 px-4 text-sm\",\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: `inline-flex items-center px-2 py-0.5 rounded text-xs font-medium ${freq.isActive ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300' : 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300'}`,\n                          children: freq.isActive ? 'Active' : 'Inactive'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 342,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 341,\n                        columnNumber: 31\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 337,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-center h-64 bg-gray-50 dark:bg-gray-700 rounded-lg\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-500 dark:text-gray-400\",\n              children: \"Select a satellite to view radio data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\n_s(RadioData, \"PYaIdQC6Q7X8O2kIc+k4UxrcvnE=\");\n_c = RadioData;\nexport default RadioData;\nvar _c;\n$RefreshReg$(_c, \"RadioData\");","map":{"version":3,"names":["React","useState","useEffect","useRef","fetchRadioData","jsxDEV","_jsxDEV","Fragment","_Fragment","RadioData","_s","_satellites$find","satellites","setSatellites","selectedSatellite","setSelectedSatellite","loading","setLoading","error","setError","spectrumMode","setSpectrumMode","frequencies","setFrequencies","isRecording","setIsRecording","canvasRef","spectrogramInterval","loadData","data","length","id","err","handleSelectSatellite","satelliteId","satellite","find","sat","current","ctx","getContext","clearRect","width","height","canvas","clearInterval","yPos","drawWaterfall","imageData","getImageData","putImageData","x","normalized","signalStrength","forEach","freq","freqPos","frequency","distance","Math","abs","peak","max","random","min","color","round","fillStyle","fillRect","drawLineGraph","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","font","i","fillText","y","setInterval","toggleRecording","formatFrequency","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","name","isActive","s","style","ref","index","modulation","type","_c","$RefreshReg$"],"sources":["/Users/shreenidhivasishta/sat/orbivue/src/pages/RadioData.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { fetchRadioData, RadioFrequency, SatelliteSignal } from '../services/radioService';\n\nconst RadioData: React.FC = () => {\n  const [satellites, setSatellites] = useState<SatelliteSignal[]>([]);\n  const [selectedSatellite, setSelectedSatellite] = useState<string | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [spectrumMode, setSpectrumMode] = useState<'waterfall' | 'line'>('waterfall');\n  const [frequencies, setFrequencies] = useState<RadioFrequency[]>([]);\n  const [isRecording, setIsRecording] = useState<boolean>(false);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const spectrogramInterval = useRef<NodeJS.Timeout | null>(null);\n\n  // Fetch initial satellite radio data\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchRadioData();\n        setSatellites(data);\n        \n        // Set first satellite as selected by default\n        if (data.length > 0 && !selectedSatellite) {\n          setSelectedSatellite(data[0].id);\n          setFrequencies(data[0].frequencies);\n        }\n        \n        setLoading(false);\n      } catch (err) {\n        setError('Error loading radio data. Please try again.');\n        setLoading(false);\n      }\n    };\n    \n    loadData();\n  }, []);\n\n  // Handle satellite selection change\n  const handleSelectSatellite = (satelliteId: string) => {\n    const satellite = satellites.find(sat => sat.id === satelliteId);\n    if (satellite) {\n      setSelectedSatellite(satelliteId);\n      setFrequencies(satellite.frequencies);\n      \n      // Reset the waterfall display\n      if (canvasRef.current) {\n        const ctx = canvasRef.current.getContext('2d');\n        if (ctx) {\n          ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n        }\n      }\n    }\n  };\n\n  // Draw the spectrum visualization (waterfall or line graph)\n  useEffect(() => {\n    if (!canvasRef.current || !selectedSatellite) return;\n    \n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    \n    // Clear any existing timer\n    if (spectrogramInterval.current) {\n      clearInterval(spectrogramInterval.current);\n    }\n    \n    // For the waterfall display\n    let yPos = 0;\n    const drawWaterfall = () => {\n      if (!ctx || !canvas) return;\n      \n      // Shift existing content down\n      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      ctx.putImageData(imageData, 0, 1);\n      \n      // Draw new line at the top\n      for (let x = 0; x < canvas.width; x++) {\n        // Each x position corresponds to a frequency in our range\n        const normalized = x / canvas.width;\n        \n        // Generate a \"signal\" value between 0-1\n        // In a real app, this would be actual signal data\n        let signalStrength = 0;\n        \n        // Find peaks around certain frequencies based on our data\n        frequencies.forEach(freq => {\n          // Convert frequency to a position on our x-axis\n          const freqPos = (freq.frequency - 137.0) / 10; // Example range: 137-147 MHz\n          \n          // Add a peak for each frequency with some noise\n          const distance = Math.abs(normalized - freqPos);\n          if (distance < 0.05) {\n            const peak = 1 - distance * 20;\n            signalStrength = Math.max(signalStrength, peak);\n          }\n        });\n        \n        // Add some noise\n        signalStrength += Math.random() * 0.1;\n        signalStrength = Math.min(1, signalStrength);\n        \n        // Map signal strength to a color (blue-green-yellow-red)\n        let color;\n        if (signalStrength < 0.25) {\n          color = `rgb(0, 0, ${Math.round(255 * signalStrength * 4)})`;\n        } else if (signalStrength < 0.5) {\n          color = `rgb(0, ${Math.round(255 * (signalStrength - 0.25) * 4)}, 255)`;\n        } else if (signalStrength < 0.75) {\n          color = `rgb(${Math.round(255 * (signalStrength - 0.5) * 4)}, 255, ${Math.round(255 - 255 * (signalStrength - 0.5) * 4)})`;\n        } else {\n          color = `rgb(255, ${Math.round(255 - 255 * (signalStrength - 0.75) * 4)}, 0)`;\n        }\n        \n        ctx.fillStyle = color;\n        ctx.fillRect(x, 0, 1, 1);\n      }\n    };\n    \n    // For the line graph display\n    const drawLineGraph = () => {\n      if (!ctx || !canvas) return;\n      \n      // Clear canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      \n      // Draw x and y axes\n      ctx.strokeStyle = '#666';\n      ctx.lineWidth = 1;\n      ctx.beginPath();\n      ctx.moveTo(0, canvas.height - 30);\n      ctx.lineTo(canvas.width, canvas.height - 30);\n      ctx.stroke();\n      \n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(0, canvas.height - 30);\n      ctx.stroke();\n      \n      // Draw frequency labels\n      ctx.fillStyle = '#666';\n      ctx.font = '10px Arial';\n      for (let i = 0; i <= 10; i++) {\n        const x = i * canvas.width / 10;\n        const freq = 137 + i;\n        ctx.fillText(`${freq} MHz`, x, canvas.height - 15);\n      }\n      \n      // Draw the spectrum line\n      ctx.strokeStyle = '#00a8ff';\n      ctx.lineWidth = 2;\n      ctx.beginPath();\n      \n      for (let x = 0; x < canvas.width; x++) {\n        const normalized = x / canvas.width;\n        let signalStrength = 0;\n        \n        // Similar logic as waterfall but for a line graph\n        frequencies.forEach(freq => {\n          const freqPos = (freq.frequency - 137.0) / 10;\n          const distance = Math.abs(normalized - freqPos);\n          if (distance < 0.05) {\n            const peak = 1 - distance * 20;\n            signalStrength = Math.max(signalStrength, peak);\n          }\n        });\n        \n        // Add noise for realism\n        signalStrength += Math.random() * 0.1;\n        signalStrength = Math.min(1, signalStrength);\n        \n        // Map to y position (inverted, so stronger signals go up)\n        const y = (canvas.height - 30) - signalStrength * (canvas.height - 40);\n        \n        if (x === 0) {\n          ctx.moveTo(x, y);\n        } else {\n          ctx.lineTo(x, y);\n        }\n      }\n      \n      ctx.stroke();\n    };\n    \n    // Start the visualization\n    if (spectrumMode === 'waterfall') {\n      // Draw initial waterfall\n      ctx.fillStyle = 'black';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      \n      // Set up the interval to update the waterfall\n      spectrogramInterval.current = setInterval(drawWaterfall, 100);\n    } else {\n      // Draw the line graph and update it periodically\n      spectrogramInterval.current = setInterval(drawLineGraph, 100);\n    }\n    \n    // Clean up on unmount\n    return () => {\n      if (spectrogramInterval.current) {\n        clearInterval(spectrogramInterval.current);\n      }\n    };\n  }, [selectedSatellite, spectrumMode, frequencies]);\n\n  // Toggle recording state\n  const toggleRecording = () => {\n    setIsRecording(!isRecording);\n    // In a real app, this would start/stop recording the signal data\n  };\n\n  // Format frequency label\n  const formatFrequency = (freq: number) => {\n    return `${freq.toFixed(3)} MHz`;\n  };\n\n  return (\n    <div className=\"flex flex-col space-y-6\">\n      <section className=\"bg-white dark:bg-gray-800 rounded-lg shadow-md p-6\">\n        <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\">\n          Satellite Radio Data\n        </h1>\n        <p className=\"text-gray-600 dark:text-gray-300 mb-6\">\n          View and analyze radio signals from satellites as they pass overhead.\n        </p>\n\n        {error && <div className=\"bg-red-100 dark:bg-red-900 text-red-700 dark:text-red-300 p-3 rounded-lg mb-4\">{error}</div>}\n\n        {loading ? (\n          <div className=\"flex justify-center items-center h-64\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-500\"></div>\n          </div>\n        ) : (\n          <div className=\"flex flex-col md:flex-row gap-6\">\n            {/* Satellite selection sidebar */}\n            <div className=\"md:w-1/4 space-y-4\">\n              <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Satellites</h2>\n              <div className=\"space-y-2\">\n                {satellites.map((satellite) => (\n                  <div\n                    key={satellite.id}\n                    className={`p-3 rounded-lg cursor-pointer transition-colors ${\n                      selectedSatellite === satellite.id\n                        ? 'bg-primary-100 dark:bg-primary-900 border border-primary-500'\n                        : 'bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600'\n                    }`}\n                    onClick={() => handleSelectSatellite(satellite.id)}\n                  >\n                    <div className=\"font-medium text-gray-900 dark:text-white\">{satellite.name}</div>\n                    <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                      {satellite.frequencies.length} tracked {satellite.frequencies.length === 1 ? 'frequency' : 'frequencies'}\n                    </div>\n                    {satellite.isActive && (\n                      <div className=\"mt-1 flex items-center\">\n                        <div className=\"h-2 w-2 rounded-full bg-green-500 mr-2\"></div>\n                        <span className=\"text-xs text-green-600 dark:text-green-400\">Transmitting</span>\n                      </div>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Main content area */}\n            <div className=\"md:w-3/4 space-y-4\">\n              {selectedSatellite ? (\n                <>\n                  <div className=\"flex justify-between items-center\">\n                    <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n                      {satellites.find(s => s.id === selectedSatellite)?.name} Radio Signals\n                    </h2>\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"flex rounded-lg overflow-hidden\">\n                        <button\n                          onClick={() => setSpectrumMode('waterfall')}\n                          className={`px-3 py-1 text-sm ${\n                            spectrumMode === 'waterfall'\n                              ? 'bg-primary-600 text-white'\n                              : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300'\n                          }`}\n                        >\n                          Waterfall\n                        </button>\n                        <button\n                          onClick={() => setSpectrumMode('line')}\n                          className={`px-3 py-1 text-sm ${\n                            spectrumMode === 'line'\n                              ? 'bg-primary-600 text-white'\n                              : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300'\n                          }`}\n                        >\n                          Spectrum\n                        </button>\n                      </div>\n                      <button\n                        onClick={toggleRecording}\n                        className={`flex items-center space-x-1 px-3 py-1 rounded-lg text-sm font-medium ${\n                          isRecording\n                            ? 'bg-red-600 text-white'\n                            : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300'\n                        }`}\n                      >\n                        <span className={`h-2 w-2 rounded-full ${isRecording ? 'bg-white animate-pulse' : 'bg-red-600'}`}></span>\n                        <span>{isRecording ? 'Recording...' : 'Record'}</span>\n                      </button>\n                    </div>\n                  </div>\n\n                  {/* Spectrum/waterfall display */}\n                  <div className=\"relative bg-black rounded-lg overflow-hidden\" style={{ height: '300px' }}>\n                    <canvas \n                      ref={canvasRef}\n                      width={800}\n                      height={300}\n                      className=\"w-full h-full\"\n                    ></canvas>\n                    \n                    {/* Frequency hover labels would go here in a full implementation */}\n                  </div>\n\n                  {/* Frequencies table */}\n                  <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\n                    <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-3\">Tracked Frequencies</h3>\n                    <div className=\"overflow-x-auto\">\n                      <table className=\"min-w-full bg-white dark:bg-gray-800 rounded-lg overflow-hidden\">\n                        <thead className=\"bg-gray-100 dark:bg-gray-900\">\n                          <tr>\n                            <th className=\"py-2 px-4 text-left text-sm font-medium text-gray-700 dark:text-gray-300\">Frequency</th>\n                            <th className=\"py-2 px-4 text-left text-sm font-medium text-gray-700 dark:text-gray-300\">Modulation</th>\n                            <th className=\"py-2 px-4 text-left text-sm font-medium text-gray-700 dark:text-gray-300\">Signal Type</th>\n                            <th className=\"py-2 px-4 text-left text-sm font-medium text-gray-700 dark:text-gray-300\">Status</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n                          {frequencies.map((freq, index) => (\n                            <tr key={index} className=\"hover:bg-gray-50 dark:hover:bg-gray-900\">\n                              <td className=\"py-2 px-4 text-sm text-gray-900 dark:text-white\">{formatFrequency(freq.frequency)}</td>\n                              <td className=\"py-2 px-4 text-sm text-gray-900 dark:text-white\">{freq.modulation}</td>\n                              <td className=\"py-2 px-4 text-sm text-gray-900 dark:text-white\">{freq.type}</td>\n                              <td className=\"py-2 px-4 text-sm\">\n                                <span className={`inline-flex items-center px-2 py-0.5 rounded text-xs font-medium ${\n                                  freq.isActive\n                                    ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300'\n                                    : 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300'\n                                }`}>\n                                  {freq.isActive ? 'Active' : 'Inactive'}\n                                </span>\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </>\n              ) : (\n                <div className=\"flex items-center justify-center h-64 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n                  <p className=\"text-gray-500 dark:text-gray-400\">Select a satellite to view radio data</p>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </section>\n    </div>\n  );\n};\n\nexport default RadioData; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}