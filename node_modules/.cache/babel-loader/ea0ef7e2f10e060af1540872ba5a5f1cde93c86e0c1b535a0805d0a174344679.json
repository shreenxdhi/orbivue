{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{fetchRadioData}from'../services/radioService';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const RadioData=()=>{var _satellites$find;const[satellites,setSatellites]=useState([]);const[selectedSatellite,setSelectedSatellite]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[spectrumMode,setSpectrumMode]=useState('waterfall');const[frequencies,setFrequencies]=useState([]);const[isRecording,setIsRecording]=useState(false);const canvasRef=useRef(null);const spectrogramInterval=useRef(null);// Fetch initial satellite radio data\nuseEffect(()=>{const loadData=async()=>{try{setLoading(true);const data=await fetchRadioData();setSatellites(data);// Set first satellite as selected by default\nif(data.length>0&&!selectedSatellite){setSelectedSatellite(data[0].id);setFrequencies(data[0].frequencies);}setLoading(false);}catch(err){setError('Error loading radio data. Please try again.');setLoading(false);}};loadData();},[]);// Handle satellite selection change\nconst handleSelectSatellite=satelliteId=>{const satellite=satellites.find(sat=>sat.id===satelliteId);if(satellite){setSelectedSatellite(satelliteId);setFrequencies(satellite.frequencies);// Reset the waterfall display\nif(canvasRef.current){const ctx=canvasRef.current.getContext('2d');if(ctx){ctx.clearRect(0,0,canvasRef.current.width,canvasRef.current.height);}}}};// Draw the spectrum visualization (waterfall or line graph)\nuseEffect(()=>{if(!canvasRef.current||!selectedSatellite)return;const canvas=canvasRef.current;const ctx=canvas.getContext('2d');if(!ctx)return;// Clear any existing timer\nif(spectrogramInterval.current){clearInterval(spectrogramInterval.current);}// For the waterfall display\nlet yPos=0;const drawWaterfall=()=>{if(!ctx||!canvas)return;// Shift existing content down\nconst imageData=ctx.getImageData(0,0,canvas.width,canvas.height);ctx.putImageData(imageData,0,1);// Draw new line at the top\nfor(let x=0;x<canvas.width;x++){// Each x position corresponds to a frequency in our range\nconst normalized=x/canvas.width;// Generate a \"signal\" value between 0-1\n// In a real app, this would be actual signal data\nlet signalStrength=0;// Find peaks around certain frequencies based on our data\nfrequencies.forEach(freq=>{// Convert frequency to a position on our x-axis\nconst freqPos=(freq.frequency-137.0)/10;// Example range: 137-147 MHz\n// Add a peak for each frequency with some noise\nconst distance=Math.abs(normalized-freqPos);if(distance<0.05){const peak=1-distance*20;signalStrength=Math.max(signalStrength,peak);}});// Add some noise\nsignalStrength+=Math.random()*0.1;signalStrength=Math.min(1,signalStrength);// Map signal strength to a color (blue-green-yellow-red)\nlet color;if(signalStrength<0.25){color=`rgb(0, 0, ${Math.round(255*signalStrength*4)})`;}else if(signalStrength<0.5){color=`rgb(0, ${Math.round(255*(signalStrength-0.25)*4)}, 255)`;}else if(signalStrength<0.75){color=`rgb(${Math.round(255*(signalStrength-0.5)*4)}, 255, ${Math.round(255-255*(signalStrength-0.5)*4)})`;}else{color=`rgb(255, ${Math.round(255-255*(signalStrength-0.75)*4)}, 0)`;}ctx.fillStyle=color;ctx.fillRect(x,0,1,1);}};// For the line graph display\nconst drawLineGraph=()=>{if(!ctx||!canvas)return;// Clear canvas\nctx.clearRect(0,0,canvas.width,canvas.height);// Draw x and y axes\nctx.strokeStyle='#666';ctx.lineWidth=1;ctx.beginPath();ctx.moveTo(0,canvas.height-30);ctx.lineTo(canvas.width,canvas.height-30);ctx.stroke();ctx.beginPath();ctx.moveTo(0,0);ctx.lineTo(0,canvas.height-30);ctx.stroke();// Draw frequency labels\nctx.fillStyle='#666';ctx.font='10px Arial';for(let i=0;i<=10;i++){const x=i*canvas.width/10;const freq=137+i;ctx.fillText(`${freq} MHz`,x,canvas.height-15);}// Draw the spectrum line\nctx.strokeStyle='#00a8ff';ctx.lineWidth=2;ctx.beginPath();for(let x=0;x<canvas.width;x++){const normalized=x/canvas.width;let signalStrength=0;// Similar logic as waterfall but for a line graph\nfrequencies.forEach(freq=>{const freqPos=(freq.frequency-137.0)/10;const distance=Math.abs(normalized-freqPos);if(distance<0.05){const peak=1-distance*20;signalStrength=Math.max(signalStrength,peak);}});// Add noise for realism\nsignalStrength+=Math.random()*0.1;signalStrength=Math.min(1,signalStrength);// Map to y position (inverted, so stronger signals go up)\nconst y=canvas.height-30-signalStrength*(canvas.height-40);if(x===0){ctx.moveTo(x,y);}else{ctx.lineTo(x,y);}}ctx.stroke();};// Start the visualization\nif(spectrumMode==='waterfall'){// Draw initial waterfall\nctx.fillStyle='black';ctx.fillRect(0,0,canvas.width,canvas.height);// Set up the interval to update the waterfall\nspectrogramInterval.current=setInterval(drawWaterfall,100);}else{// Draw the line graph and update it periodically\nspectrogramInterval.current=setInterval(drawLineGraph,100);}// Clean up on unmount\nreturn()=>{if(spectrogramInterval.current){clearInterval(spectrogramInterval.current);}};},[selectedSatellite,spectrumMode,frequencies]);// Toggle recording state\nconst toggleRecording=()=>{setIsRecording(!isRecording);// In a real app, this would start/stop recording the signal data\n};// Format frequency label\nconst formatFrequency=freq=>{return`${freq.toFixed(3)} MHz`;};return/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col space-y-6\",children:/*#__PURE__*/_jsxs(\"section\",{className:\"bg-white dark:bg-gray-800 rounded-lg shadow-md p-6\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold text-gray-900 dark:text-white mb-4\",children:\"Satellite Radio Data\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 dark:text-gray-300 mb-6\",children:\"View and analyze radio signals from satellites as they pass overhead.\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-100 dark:bg-red-900 text-red-700 dark:text-red-300 p-3 rounded-lg mb-4\",children:error}),loading?/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center h-64\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-500\"})}):/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col md:flex-row gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"md:w-1/4 space-y-4\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-semibold text-gray-900 dark:text-white\",children:\"Satellites\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:satellites.map(satellite=>/*#__PURE__*/_jsxs(\"div\",{className:`p-3 rounded-lg cursor-pointer transition-colors ${selectedSatellite===satellite.id?'bg-primary-100 dark:bg-primary-900 border border-primary-500':'bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600'}`,onClick:()=>handleSelectSatellite(satellite.id),children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900 dark:text-white\",children:satellite.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-500 dark:text-gray-400\",children:[satellite.frequencies.length,\" tracked \",satellite.frequencies.length===1?'frequency':'frequencies']}),satellite.isActive&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-1 flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"h-2 w-2 rounded-full bg-green-500 mr-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-green-600 dark:text-green-400\",children:\"Transmitting\"})]})]},satellite.id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"md:w-3/4 space-y-4\",children:selectedSatellite?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"text-xl font-semibold text-gray-900 dark:text-white\",children:[(_satellites$find=satellites.find(s=>s.id===selectedSatellite))===null||_satellites$find===void 0?void 0:_satellites$find.name,\" Radio Signals\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex rounded-lg overflow-hidden\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSpectrumMode('waterfall'),className:`px-3 py-1 text-sm ${spectrumMode==='waterfall'?'bg-primary-600 text-white':'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300'}`,children:\"Waterfall\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSpectrumMode('line'),className:`px-3 py-1 text-sm ${spectrumMode==='line'?'bg-primary-600 text-white':'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300'}`,children:\"Spectrum\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:toggleRecording,className:`flex items-center space-x-1 px-3 py-1 rounded-lg text-sm font-medium ${isRecording?'bg-red-600 text-white':'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300'}`,children:[/*#__PURE__*/_jsx(\"span\",{className:`h-2 w-2 rounded-full ${isRecording?'bg-white animate-pulse':'bg-red-600'}`}),/*#__PURE__*/_jsx(\"span\",{children:isRecording?'Recording...':'Record'})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"relative bg-black rounded-lg overflow-hidden\",style:{height:'300px'},children:/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,width:800,height:300,className:\"w-full h-full\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900 dark:text-white mb-3\",children:\"Tracked Frequencies\"}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full bg-white dark:bg-gray-800 rounded-lg overflow-hidden\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-100 dark:bg-gray-900\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"py-2 px-4 text-left text-sm font-medium text-gray-700 dark:text-gray-300\",children:\"Frequency\"}),/*#__PURE__*/_jsx(\"th\",{className:\"py-2 px-4 text-left text-sm font-medium text-gray-700 dark:text-gray-300\",children:\"Modulation\"}),/*#__PURE__*/_jsx(\"th\",{className:\"py-2 px-4 text-left text-sm font-medium text-gray-700 dark:text-gray-300\",children:\"Signal Type\"}),/*#__PURE__*/_jsx(\"th\",{className:\"py-2 px-4 text-left text-sm font-medium text-gray-700 dark:text-gray-300\",children:\"Status\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"divide-y divide-gray-200 dark:divide-gray-700\",children:frequencies.map((freq,index)=>/*#__PURE__*/_jsxs(\"tr\",{className:\"hover:bg-gray-50 dark:hover:bg-gray-900\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"py-2 px-4 text-sm text-gray-900 dark:text-white\",children:formatFrequency(freq.frequency)}),/*#__PURE__*/_jsx(\"td\",{className:\"py-2 px-4 text-sm text-gray-900 dark:text-white\",children:freq.modulation}),/*#__PURE__*/_jsx(\"td\",{className:\"py-2 px-4 text-sm text-gray-900 dark:text-white\",children:freq.type}),/*#__PURE__*/_jsx(\"td\",{className:\"py-2 px-4 text-sm\",children:/*#__PURE__*/_jsx(\"span\",{className:`inline-flex items-center px-2 py-0.5 rounded text-xs font-medium ${freq.isActive?'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300':'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300'}`,children:freq.isActive?'Active':'Inactive'})})]},index))})]})})]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-64 bg-gray-50 dark:bg-gray-700 rounded-lg\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500 dark:text-gray-400\",children:\"Select a satellite to view radio data\"})})})]})]})});};export default RadioData;","map":{"version":3,"names":["React","useState","useEffect","useRef","fetchRadioData","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","RadioData","_satellites$find","satellites","setSatellites","selectedSatellite","setSelectedSatellite","loading","setLoading","error","setError","spectrumMode","setSpectrumMode","frequencies","setFrequencies","isRecording","setIsRecording","canvasRef","spectrogramInterval","loadData","data","length","id","err","handleSelectSatellite","satelliteId","satellite","find","sat","current","ctx","getContext","clearRect","width","height","canvas","clearInterval","yPos","drawWaterfall","imageData","getImageData","putImageData","x","normalized","signalStrength","forEach","freq","freqPos","frequency","distance","Math","abs","peak","max","random","min","color","round","fillStyle","fillRect","drawLineGraph","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","font","i","fillText","y","setInterval","toggleRecording","formatFrequency","toFixed","className","children","map","onClick","name","isActive","s","style","ref","index","modulation","type"],"sources":["/Users/shreenidhivasishta/sat/orbivue/src/pages/RadioData.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { fetchRadioData, RadioFrequency, SatelliteSignal } from '../services/radioService';\n\nconst RadioData: React.FC = () => {\n  const [satellites, setSatellites] = useState<SatelliteSignal[]>([]);\n  const [selectedSatellite, setSelectedSatellite] = useState<string | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [spectrumMode, setSpectrumMode] = useState<'waterfall' | 'line'>('waterfall');\n  const [frequencies, setFrequencies] = useState<RadioFrequency[]>([]);\n  const [isRecording, setIsRecording] = useState<boolean>(false);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const spectrogramInterval = useRef<NodeJS.Timeout | null>(null);\n\n  // Fetch initial satellite radio data\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchRadioData();\n        setSatellites(data);\n        \n        // Set first satellite as selected by default\n        if (data.length > 0 && !selectedSatellite) {\n          setSelectedSatellite(data[0].id);\n          setFrequencies(data[0].frequencies);\n        }\n        \n        setLoading(false);\n      } catch (err) {\n        setError('Error loading radio data. Please try again.');\n        setLoading(false);\n      }\n    };\n    \n    loadData();\n  }, []);\n\n  // Handle satellite selection change\n  const handleSelectSatellite = (satelliteId: string) => {\n    const satellite = satellites.find(sat => sat.id === satelliteId);\n    if (satellite) {\n      setSelectedSatellite(satelliteId);\n      setFrequencies(satellite.frequencies);\n      \n      // Reset the waterfall display\n      if (canvasRef.current) {\n        const ctx = canvasRef.current.getContext('2d');\n        if (ctx) {\n          ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n        }\n      }\n    }\n  };\n\n  // Draw the spectrum visualization (waterfall or line graph)\n  useEffect(() => {\n    if (!canvasRef.current || !selectedSatellite) return;\n    \n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    \n    // Clear any existing timer\n    if (spectrogramInterval.current) {\n      clearInterval(spectrogramInterval.current);\n    }\n    \n    // For the waterfall display\n    let yPos = 0;\n    const drawWaterfall = () => {\n      if (!ctx || !canvas) return;\n      \n      // Shift existing content down\n      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      ctx.putImageData(imageData, 0, 1);\n      \n      // Draw new line at the top\n      for (let x = 0; x < canvas.width; x++) {\n        // Each x position corresponds to a frequency in our range\n        const normalized = x / canvas.width;\n        \n        // Generate a \"signal\" value between 0-1\n        // In a real app, this would be actual signal data\n        let signalStrength = 0;\n        \n        // Find peaks around certain frequencies based on our data\n        frequencies.forEach(freq => {\n          // Convert frequency to a position on our x-axis\n          const freqPos = (freq.frequency - 137.0) / 10; // Example range: 137-147 MHz\n          \n          // Add a peak for each frequency with some noise\n          const distance = Math.abs(normalized - freqPos);\n          if (distance < 0.05) {\n            const peak = 1 - distance * 20;\n            signalStrength = Math.max(signalStrength, peak);\n          }\n        });\n        \n        // Add some noise\n        signalStrength += Math.random() * 0.1;\n        signalStrength = Math.min(1, signalStrength);\n        \n        // Map signal strength to a color (blue-green-yellow-red)\n        let color;\n        if (signalStrength < 0.25) {\n          color = `rgb(0, 0, ${Math.round(255 * signalStrength * 4)})`;\n        } else if (signalStrength < 0.5) {\n          color = `rgb(0, ${Math.round(255 * (signalStrength - 0.25) * 4)}, 255)`;\n        } else if (signalStrength < 0.75) {\n          color = `rgb(${Math.round(255 * (signalStrength - 0.5) * 4)}, 255, ${Math.round(255 - 255 * (signalStrength - 0.5) * 4)})`;\n        } else {\n          color = `rgb(255, ${Math.round(255 - 255 * (signalStrength - 0.75) * 4)}, 0)`;\n        }\n        \n        ctx.fillStyle = color;\n        ctx.fillRect(x, 0, 1, 1);\n      }\n    };\n    \n    // For the line graph display\n    const drawLineGraph = () => {\n      if (!ctx || !canvas) return;\n      \n      // Clear canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      \n      // Draw x and y axes\n      ctx.strokeStyle = '#666';\n      ctx.lineWidth = 1;\n      ctx.beginPath();\n      ctx.moveTo(0, canvas.height - 30);\n      ctx.lineTo(canvas.width, canvas.height - 30);\n      ctx.stroke();\n      \n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(0, canvas.height - 30);\n      ctx.stroke();\n      \n      // Draw frequency labels\n      ctx.fillStyle = '#666';\n      ctx.font = '10px Arial';\n      for (let i = 0; i <= 10; i++) {\n        const x = i * canvas.width / 10;\n        const freq = 137 + i;\n        ctx.fillText(`${freq} MHz`, x, canvas.height - 15);\n      }\n      \n      // Draw the spectrum line\n      ctx.strokeStyle = '#00a8ff';\n      ctx.lineWidth = 2;\n      ctx.beginPath();\n      \n      for (let x = 0; x < canvas.width; x++) {\n        const normalized = x / canvas.width;\n        let signalStrength = 0;\n        \n        // Similar logic as waterfall but for a line graph\n        frequencies.forEach(freq => {\n          const freqPos = (freq.frequency - 137.0) / 10;\n          const distance = Math.abs(normalized - freqPos);\n          if (distance < 0.05) {\n            const peak = 1 - distance * 20;\n            signalStrength = Math.max(signalStrength, peak);\n          }\n        });\n        \n        // Add noise for realism\n        signalStrength += Math.random() * 0.1;\n        signalStrength = Math.min(1, signalStrength);\n        \n        // Map to y position (inverted, so stronger signals go up)\n        const y = (canvas.height - 30) - signalStrength * (canvas.height - 40);\n        \n        if (x === 0) {\n          ctx.moveTo(x, y);\n        } else {\n          ctx.lineTo(x, y);\n        }\n      }\n      \n      ctx.stroke();\n    };\n    \n    // Start the visualization\n    if (spectrumMode === 'waterfall') {\n      // Draw initial waterfall\n      ctx.fillStyle = 'black';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      \n      // Set up the interval to update the waterfall\n      spectrogramInterval.current = setInterval(drawWaterfall, 100);\n    } else {\n      // Draw the line graph and update it periodically\n      spectrogramInterval.current = setInterval(drawLineGraph, 100);\n    }\n    \n    // Clean up on unmount\n    return () => {\n      if (spectrogramInterval.current) {\n        clearInterval(spectrogramInterval.current);\n      }\n    };\n  }, [selectedSatellite, spectrumMode, frequencies]);\n\n  // Toggle recording state\n  const toggleRecording = () => {\n    setIsRecording(!isRecording);\n    // In a real app, this would start/stop recording the signal data\n  };\n\n  // Format frequency label\n  const formatFrequency = (freq: number) => {\n    return `${freq.toFixed(3)} MHz`;\n  };\n\n  return (\n    <div className=\"flex flex-col space-y-6\">\n      <section className=\"bg-white dark:bg-gray-800 rounded-lg shadow-md p-6\">\n        <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\">\n          Satellite Radio Data\n        </h1>\n        <p className=\"text-gray-600 dark:text-gray-300 mb-6\">\n          View and analyze radio signals from satellites as they pass overhead.\n        </p>\n\n        {error && <div className=\"bg-red-100 dark:bg-red-900 text-red-700 dark:text-red-300 p-3 rounded-lg mb-4\">{error}</div>}\n\n        {loading ? (\n          <div className=\"flex justify-center items-center h-64\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-500\"></div>\n          </div>\n        ) : (\n          <div className=\"flex flex-col md:flex-row gap-6\">\n            {/* Satellite selection sidebar */}\n            <div className=\"md:w-1/4 space-y-4\">\n              <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Satellites</h2>\n              <div className=\"space-y-2\">\n                {satellites.map((satellite) => (\n                  <div\n                    key={satellite.id}\n                    className={`p-3 rounded-lg cursor-pointer transition-colors ${\n                      selectedSatellite === satellite.id\n                        ? 'bg-primary-100 dark:bg-primary-900 border border-primary-500'\n                        : 'bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600'\n                    }`}\n                    onClick={() => handleSelectSatellite(satellite.id)}\n                  >\n                    <div className=\"font-medium text-gray-900 dark:text-white\">{satellite.name}</div>\n                    <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                      {satellite.frequencies.length} tracked {satellite.frequencies.length === 1 ? 'frequency' : 'frequencies'}\n                    </div>\n                    {satellite.isActive && (\n                      <div className=\"mt-1 flex items-center\">\n                        <div className=\"h-2 w-2 rounded-full bg-green-500 mr-2\"></div>\n                        <span className=\"text-xs text-green-600 dark:text-green-400\">Transmitting</span>\n                      </div>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Main content area */}\n            <div className=\"md:w-3/4 space-y-4\">\n              {selectedSatellite ? (\n                <>\n                  <div className=\"flex justify-between items-center\">\n                    <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n                      {satellites.find(s => s.id === selectedSatellite)?.name} Radio Signals\n                    </h2>\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"flex rounded-lg overflow-hidden\">\n                        <button\n                          onClick={() => setSpectrumMode('waterfall')}\n                          className={`px-3 py-1 text-sm ${\n                            spectrumMode === 'waterfall'\n                              ? 'bg-primary-600 text-white'\n                              : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300'\n                          }`}\n                        >\n                          Waterfall\n                        </button>\n                        <button\n                          onClick={() => setSpectrumMode('line')}\n                          className={`px-3 py-1 text-sm ${\n                            spectrumMode === 'line'\n                              ? 'bg-primary-600 text-white'\n                              : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300'\n                          }`}\n                        >\n                          Spectrum\n                        </button>\n                      </div>\n                      <button\n                        onClick={toggleRecording}\n                        className={`flex items-center space-x-1 px-3 py-1 rounded-lg text-sm font-medium ${\n                          isRecording\n                            ? 'bg-red-600 text-white'\n                            : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300'\n                        }`}\n                      >\n                        <span className={`h-2 w-2 rounded-full ${isRecording ? 'bg-white animate-pulse' : 'bg-red-600'}`}></span>\n                        <span>{isRecording ? 'Recording...' : 'Record'}</span>\n                      </button>\n                    </div>\n                  </div>\n\n                  {/* Spectrum/waterfall display */}\n                  <div className=\"relative bg-black rounded-lg overflow-hidden\" style={{ height: '300px' }}>\n                    <canvas \n                      ref={canvasRef}\n                      width={800}\n                      height={300}\n                      className=\"w-full h-full\"\n                    ></canvas>\n                    \n                    {/* Frequency hover labels would go here in a full implementation */}\n                  </div>\n\n                  {/* Frequencies table */}\n                  <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\n                    <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-3\">Tracked Frequencies</h3>\n                    <div className=\"overflow-x-auto\">\n                      <table className=\"min-w-full bg-white dark:bg-gray-800 rounded-lg overflow-hidden\">\n                        <thead className=\"bg-gray-100 dark:bg-gray-900\">\n                          <tr>\n                            <th className=\"py-2 px-4 text-left text-sm font-medium text-gray-700 dark:text-gray-300\">Frequency</th>\n                            <th className=\"py-2 px-4 text-left text-sm font-medium text-gray-700 dark:text-gray-300\">Modulation</th>\n                            <th className=\"py-2 px-4 text-left text-sm font-medium text-gray-700 dark:text-gray-300\">Signal Type</th>\n                            <th className=\"py-2 px-4 text-left text-sm font-medium text-gray-700 dark:text-gray-300\">Status</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n                          {frequencies.map((freq, index) => (\n                            <tr key={index} className=\"hover:bg-gray-50 dark:hover:bg-gray-900\">\n                              <td className=\"py-2 px-4 text-sm text-gray-900 dark:text-white\">{formatFrequency(freq.frequency)}</td>\n                              <td className=\"py-2 px-4 text-sm text-gray-900 dark:text-white\">{freq.modulation}</td>\n                              <td className=\"py-2 px-4 text-sm text-gray-900 dark:text-white\">{freq.type}</td>\n                              <td className=\"py-2 px-4 text-sm\">\n                                <span className={`inline-flex items-center px-2 py-0.5 rounded text-xs font-medium ${\n                                  freq.isActive\n                                    ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300'\n                                    : 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300'\n                                }`}>\n                                  {freq.isActive ? 'Active' : 'Inactive'}\n                                </span>\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </>\n              ) : (\n                <div className=\"flex items-center justify-center h-64 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n                  <p className=\"text-gray-500 dark:text-gray-400\">Select a satellite to view radio data</p>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </section>\n    </div>\n  );\n};\n\nexport default RadioData; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}