{"ast":null,"code":"import React,{useState,useEffect}from'react';import{fetchWeatherData,fetchForecast}from'../services/weatherService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const WeatherViewer=()=>{const[userLocation,setUserLocation]=useState([0,0]);const[locationName,setLocationName]=useState('');const[weatherData,setWeatherData]=useState(null);const[forecast,setForecast]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[searchQuery,setSearchQuery]=useState('');// Get user's location\nuseEffect(()=>{if(navigator.geolocation){navigator.geolocation.getCurrentPosition(position=>{setUserLocation([position.coords.latitude,position.coords.longitude]);},()=>{setError('Unable to retrieve your location');// Default to New York City\nsetUserLocation([40.7128,-74.0060]);});}else{setError('Geolocation is not supported by your browser');// Default to New York City\nsetUserLocation([40.7128,-74.0060]);}},[]);// Fetch weather when user location is available\nuseEffect(()=>{if(userLocation[0]!==0||userLocation[1]!==0){fetchWeather(userLocation[0],userLocation[1]);}},[userLocation]);const fetchWeather=async(lat,lon)=>{try{setLoading(true);// Fetch current weather\nconst data=await fetchWeatherData(lat,lon);setWeatherData(data);setLocationName(data.location);// Fetch forecast\nconst forecastData=await fetchForecast(lat,lon);setForecast(forecastData);setLoading(false);setError(null);}catch(err){setError('Error fetching weather data. Please try again.');setLoading(false);}};const handleSearch=async e=>{e.preventDefault();if(searchQuery.trim()){try{setLoading(true);// In a real app, we would geocode the location here\n// For now, we'll just update the location name and use mock data\nsetLocationName(searchQuery);// Fetch weather for searched location (mock)\nconst data=await fetchWeatherData(0,0,searchQuery);setWeatherData(data);// Fetch forecast for searched location (mock)\nconst forecastData=await fetchForecast(0,0,searchQuery);setForecast(forecastData);setLoading(false);setError(null);}catch(err){setError('Location not found. Please try another search.');setLoading(false);}}};// Format time from Date object\nconst formatTime=date=>{return date.toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'});};// Format date to day name\nconst formatDay=date=>{return date.toLocaleDateString([],{weekday:'short'});};return/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col space-y-6\",children:/*#__PURE__*/_jsxs(\"section\",{className:\"bg-white dark:bg-gray-800 rounded-lg shadow-md p-6\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold text-gray-900 dark:text-white mb-4\",children:\"Weather Viewer\"}),/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSearch,className:\"mb-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex w-full\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search location...\",className:\"flex-grow px-4 py-2 rounded-l-lg border border-gray-300 dark:border-gray-600 focus:outline-none focus:ring-2 focus:ring-primary-500 dark:bg-gray-700 dark:text-white\",value:searchQuery,onChange:e=>setSearchQuery(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"px-4 py-2 bg-primary-600 hover:bg-primary-700 text-white font-medium rounded-r-lg\",children:\"Search\"})]})}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-100 dark:bg-red-900 text-red-700 dark:text-red-300 p-3 rounded-lg mb-4\",children:error}),loading?/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center h-64\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-500\"})}):weatherData?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-gradient-to-r from-blue-500 to-primary-600 text-white rounded-lg p-6 mb-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col md:flex-row justify-between items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold mb-1\",children:weatherData.location}),/*#__PURE__*/_jsx(\"p\",{className:\"text-lg capitalize\",children:weatherData.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center mt-4\",children:[/*#__PURE__*/_jsx(\"img\",{src:`https://openweathermap.org/img/wn/${weatherData.icon}@2x.png`,alt:weatherData.description,className:\"w-16 h-16 mr-2\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-4xl font-bold\",children:[Math.round(weatherData.temperature),\"\\xB0C\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Feels like \",Math.round(weatherData.feelsLike),\"\\xB0C\"]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 md:mt-0 grid grid-cols-2 gap-x-8 gap-y-2\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm opacity-75\",children:\"Humidity\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"font-medium\",children:[weatherData.humidity,\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm opacity-75\",children:\"Wind\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"font-medium\",children:[weatherData.windSpeed,\" km/h (\",weatherData.windDirection,\")\"]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm opacity-75\",children:\"Pressure\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"font-medium\",children:[weatherData.pressure,\" hPa\"]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm opacity-75\",children:\"Sunrise / Sunset\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"font-medium\",children:[formatTime(weatherData.sunrise),\" / \",formatTime(weatherData.sunset)]})]})]})]})}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-semibold mb-4 text-gray-900 dark:text-white\",children:\"5-Day Forecast\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-4\",children:forecast.map((day,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-100 dark:bg-gray-700 rounded-lg p-4 text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-700 dark:text-gray-300\",children:formatDay(day.date)}),/*#__PURE__*/_jsx(\"img\",{src:`https://openweathermap.org/img/wn/${day.icon}.png`,alt:day.description,className:\"w-12 h-12 mx-auto\"}),/*#__PURE__*/_jsx(\"div\",{className:\"capitalize text-sm text-gray-600 dark:text-gray-400\",children:day.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2 text-gray-800 dark:text-white\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium\",children:[Math.round(day.maxTemp),\"\\xB0\"]}),\" / \",Math.round(day.minTemp),\"\\xB0\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2 text-xs text-gray-600 dark:text-gray-400\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"Precipitation: \",day.precipitation,\"%\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Humidity: \",day.humidity,\"%\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Wind: \",day.windSpeed,\" km/h\"]})]})]},index))})]}):/*#__PURE__*/_jsx(\"div\",{className:\"text-center text-gray-500 dark:text-gray-400 py-12\",children:/*#__PURE__*/_jsx(\"p\",{children:\"No weather data available. Please search for a location.\"})})]})});};export default WeatherViewer;","map":{"version":3,"names":["React","useState","useEffect","fetchWeatherData","fetchForecast","jsx","_jsx","jsxs","_jsxs","WeatherViewer","userLocation","setUserLocation","locationName","setLocationName","weatherData","setWeatherData","forecast","setForecast","loading","setLoading","error","setError","searchQuery","setSearchQuery","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetchWeather","lat","lon","data","location","forecastData","err","handleSearch","e","preventDefault","trim","formatTime","date","toLocaleTimeString","hour","minute","formatDay","toLocaleDateString","weekday","className","children","onSubmit","type","placeholder","value","onChange","target","description","src","icon","alt","Math","round","temperature","feelsLike","humidity","windSpeed","windDirection","pressure","sunrise","sunset","map","day","index","maxTemp","minTemp","precipitation"],"sources":["/Users/shreenidhivasishta/sat/orbivue/src/pages/WeatherViewer.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchWeatherData, fetchForecast } from '../services/weatherService';\n\ninterface WeatherData {\n  location: string;\n  temperature: number;\n  feelsLike: number;\n  humidity: number;\n  pressure: number;\n  windSpeed: number;\n  windDirection: string;\n  description: string;\n  icon: string;\n  sunrise: Date;\n  sunset: Date;\n}\n\ninterface ForecastDay {\n  date: Date;\n  minTemp: number;\n  maxTemp: number;\n  description: string;\n  icon: string;\n  precipitation: number;\n  humidity: number;\n  windSpeed: number;\n}\n\nconst WeatherViewer: React.FC = () => {\n  const [userLocation, setUserLocation] = useState<[number, number]>([0, 0]);\n  const [locationName, setLocationName] = useState<string>('');\n  const [weatherData, setWeatherData] = useState<WeatherData | null>(null);\n  const [forecast, setForecast] = useState<ForecastDay[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  // Get user's location\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          setUserLocation([position.coords.latitude, position.coords.longitude]);\n        },\n        () => {\n          setError('Unable to retrieve your location');\n          // Default to New York City\n          setUserLocation([40.7128, -74.0060]);\n        }\n      );\n    } else {\n      setError('Geolocation is not supported by your browser');\n      // Default to New York City\n      setUserLocation([40.7128, -74.0060]);\n    }\n  }, []);\n\n  // Fetch weather when user location is available\n  useEffect(() => {\n    if (userLocation[0] !== 0 || userLocation[1] !== 0) {\n      fetchWeather(userLocation[0], userLocation[1]);\n    }\n  }, [userLocation]);\n\n  const fetchWeather = async (lat: number, lon: number) => {\n    try {\n      setLoading(true);\n      // Fetch current weather\n      const data = await fetchWeatherData(lat, lon);\n      setWeatherData(data);\n      setLocationName(data.location);\n\n      // Fetch forecast\n      const forecastData = await fetchForecast(lat, lon);\n      setForecast(forecastData);\n      \n      setLoading(false);\n      setError(null);\n    } catch (err) {\n      setError('Error fetching weather data. Please try again.');\n      setLoading(false);\n    }\n  };\n\n  const handleSearch = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (searchQuery.trim()) {\n      try {\n        setLoading(true);\n        // In a real app, we would geocode the location here\n        // For now, we'll just update the location name and use mock data\n        setLocationName(searchQuery);\n\n        // Fetch weather for searched location (mock)\n        const data = await fetchWeatherData(0, 0, searchQuery);\n        setWeatherData(data);\n\n        // Fetch forecast for searched location (mock)\n        const forecastData = await fetchForecast(0, 0, searchQuery);\n        setForecast(forecastData);\n        \n        setLoading(false);\n        setError(null);\n      } catch (err) {\n        setError('Location not found. Please try another search.');\n        setLoading(false);\n      }\n    }\n  };\n\n  // Format time from Date object\n  const formatTime = (date: Date): string => {\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  // Format date to day name\n  const formatDay = (date: Date): string => {\n    return date.toLocaleDateString([], { weekday: 'short' });\n  };\n\n  return (\n    <div className=\"flex flex-col space-y-6\">\n      <section className=\"bg-white dark:bg-gray-800 rounded-lg shadow-md p-6\">\n        <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\">\n          Weather Viewer\n        </h1>\n\n        {/* Search form */}\n        <form onSubmit={handleSearch} className=\"mb-6\">\n          <div className=\"flex w-full\">\n            <input\n              type=\"text\"\n              placeholder=\"Search location...\"\n              className=\"flex-grow px-4 py-2 rounded-l-lg border border-gray-300 dark:border-gray-600 focus:outline-none focus:ring-2 focus:ring-primary-500 dark:bg-gray-700 dark:text-white\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n            />\n            <button\n              type=\"submit\"\n              className=\"px-4 py-2 bg-primary-600 hover:bg-primary-700 text-white font-medium rounded-r-lg\"\n            >\n              Search\n            </button>\n          </div>\n        </form>\n\n        {error && <div className=\"bg-red-100 dark:bg-red-900 text-red-700 dark:text-red-300 p-3 rounded-lg mb-4\">{error}</div>}\n\n        {loading ? (\n          <div className=\"flex justify-center items-center h-64\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-500\"></div>\n          </div>\n        ) : weatherData ? (\n          <div>\n            {/* Current weather */}\n            <div className=\"bg-gradient-to-r from-blue-500 to-primary-600 text-white rounded-lg p-6 mb-6\">\n              <div className=\"flex flex-col md:flex-row justify-between items-center\">\n                <div>\n                  <h2 className=\"text-2xl font-bold mb-1\">{weatherData.location}</h2>\n                  <p className=\"text-lg capitalize\">{weatherData.description}</p>\n                  <div className=\"flex items-center mt-4\">\n                    <img \n                      src={`https://openweathermap.org/img/wn/${weatherData.icon}@2x.png`} \n                      alt={weatherData.description}\n                      className=\"w-16 h-16 mr-2\"\n                    />\n                    <div>\n                      <div className=\"text-4xl font-bold\">{Math.round(weatherData.temperature)}°C</div>\n                      <div>Feels like {Math.round(weatherData.feelsLike)}°C</div>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"mt-6 md:mt-0 grid grid-cols-2 gap-x-8 gap-y-2\">\n                  <div>\n                    <div className=\"text-sm opacity-75\">Humidity</div>\n                    <div className=\"font-medium\">{weatherData.humidity}%</div>\n                  </div>\n                  <div>\n                    <div className=\"text-sm opacity-75\">Wind</div>\n                    <div className=\"font-medium\">{weatherData.windSpeed} km/h ({weatherData.windDirection})</div>\n                  </div>\n                  <div>\n                    <div className=\"text-sm opacity-75\">Pressure</div>\n                    <div className=\"font-medium\">{weatherData.pressure} hPa</div>\n                  </div>\n                  <div>\n                    <div className=\"text-sm opacity-75\">Sunrise / Sunset</div>\n                    <div className=\"font-medium\">{formatTime(weatherData.sunrise)} / {formatTime(weatherData.sunset)}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Forecast */}\n            <h3 className=\"text-xl font-semibold mb-4 text-gray-900 dark:text-white\">5-Day Forecast</h3>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-4\">\n              {forecast.map((day, index) => (\n                <div key={index} className=\"bg-gray-100 dark:bg-gray-700 rounded-lg p-4 text-center\">\n                  <div className=\"font-medium text-gray-700 dark:text-gray-300\">{formatDay(day.date)}</div>\n                  <img \n                    src={`https://openweathermap.org/img/wn/${day.icon}.png`} \n                    alt={day.description}\n                    className=\"w-12 h-12 mx-auto\"\n                  />\n                  <div className=\"capitalize text-sm text-gray-600 dark:text-gray-400\">{day.description}</div>\n                  <div className=\"mt-2 text-gray-800 dark:text-white\">\n                    <span className=\"font-medium\">{Math.round(day.maxTemp)}°</span> / {Math.round(day.minTemp)}°\n                  </div>\n                  <div className=\"mt-2 text-xs text-gray-600 dark:text-gray-400\">\n                    <div>Precipitation: {day.precipitation}%</div>\n                    <div>Humidity: {day.humidity}%</div>\n                    <div>Wind: {day.windSpeed} km/h</div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        ) : (\n          <div className=\"text-center text-gray-500 dark:text-gray-400 py-12\">\n            <p>No weather data available. Please search for a location.</p>\n          </div>\n        )}\n      </section>\n    </div>\n  );\n};\n\nexport default WeatherViewer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}